// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: KeyData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AspNetCore.DataProtection.Kms {

  /// <summary>Holder for reflection information generated from KeyData.proto</summary>
  public static partial class KeyDataReflection {

    #region Descriptor
    /// <summary>File descriptor for KeyData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeyDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1LZXlEYXRhLnByb3RvEipnb29nbGUuY2xvdWQuYXNwbmV0Y29yZS5kYXRh",
            "cHJvdGVjdGlvbi5rbXMiYQoMU3ltbWV0cmljS2V5EkUKB2Flc19rZXkYASAB",
            "KAsyMi5nb29nbGUuY2xvdWQuYXNwbmV0Y29yZS5kYXRhcHJvdGVjdGlvbi5r",
            "bXMuQWVzS2V5SABCCgoIa2V5X2RhdGEiIgoGQWVzS2V5EgsKA2lfdhgBIAEo",
            "DBILCgNrZXkYAiABKAxCLaoCKkdvb2dsZS5DbG91ZC5Bc3BOZXRDb3JlLkRh",
            "dGFQcm90ZWN0aW9uLkttc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AspNetCore.DataProtection.Kms.SymmetricKey), global::Google.Cloud.AspNetCore.DataProtection.Kms.SymmetricKey.Parser, new[]{ "AesKey" }, new[]{ "KeyData" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey), global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey.Parser, new[]{ "IV", "Key" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Sufficient information to recreate a symmetric key for use
  /// in ASP.NET Core. Each algorithm has a separate message, to allow
  /// for fine-grained parameterization.
  /// </summary>
  public sealed partial class SymmetricKey : pb::IMessage<SymmetricKey> {
    private static readonly pb::MessageParser<SymmetricKey> _parser = new pb::MessageParser<SymmetricKey>(() => new SymmetricKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SymmetricKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AspNetCore.DataProtection.Kms.KeyDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymmetricKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymmetricKey(SymmetricKey other) : this() {
      switch (other.KeyDataCase) {
        case KeyDataOneofCase.AesKey:
          AesKey = other.AesKey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SymmetricKey Clone() {
      return new SymmetricKey(this);
    }

    /// <summary>Field number for the "aes_key" field.</summary>
    public const int AesKeyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey AesKey {
      get { return keyDataCase_ == KeyDataOneofCase.AesKey ? (global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey) keyData_ : null; }
      set {
        keyData_ = value;
        keyDataCase_ = value == null ? KeyDataOneofCase.None : KeyDataOneofCase.AesKey;
      }
    }

    private object keyData_;
    /// <summary>Enum of possible cases for the "key_data" oneof.</summary>
    public enum KeyDataOneofCase {
      None = 0,
      AesKey = 1,
    }
    private KeyDataOneofCase keyDataCase_ = KeyDataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyDataOneofCase KeyDataCase {
      get { return keyDataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyData() {
      keyDataCase_ = KeyDataOneofCase.None;
      keyData_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SymmetricKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SymmetricKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AesKey, other.AesKey)) return false;
      if (KeyDataCase != other.KeyDataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (keyDataCase_ == KeyDataOneofCase.AesKey) hash ^= AesKey.GetHashCode();
      hash ^= (int) keyDataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (keyDataCase_ == KeyDataOneofCase.AesKey) {
        output.WriteRawTag(10);
        output.WriteMessage(AesKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (keyDataCase_ == KeyDataOneofCase.AesKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AesKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SymmetricKey other) {
      if (other == null) {
        return;
      }
      switch (other.KeyDataCase) {
        case KeyDataOneofCase.AesKey:
          if (AesKey == null) {
            AesKey = new global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey();
          }
          AesKey.MergeFrom(other.AesKey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey subBuilder = new global::Google.Cloud.AspNetCore.DataProtection.Kms.AesKey();
            if (keyDataCase_ == KeyDataOneofCase.AesKey) {
              subBuilder.MergeFrom(AesKey);
            }
            input.ReadMessage(subBuilder);
            AesKey = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Key information for an AES key.
  /// </summary>
  public sealed partial class AesKey : pb::IMessage<AesKey> {
    private static readonly pb::MessageParser<AesKey> _parser = new pb::MessageParser<AesKey>(() => new AesKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AesKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AspNetCore.DataProtection.Kms.KeyDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AesKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AesKey(AesKey other) : this() {
      iV_ = other.iV_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AesKey Clone() {
      return new AesKey(this);
    }

    /// <summary>Field number for the "i_v" field.</summary>
    public const int IVFieldNumber = 1;
    private pb::ByteString iV_ = pb::ByteString.Empty;
    /// <summary>
    /// The initialization vector
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString IV {
      get { return iV_; }
      set {
        iV_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private pb::ByteString key_ = pb::ByteString.Empty;
    /// <summary>
    /// The key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AesKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AesKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IV != other.IV) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IV.Length != 0) hash ^= IV.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IV.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(IV);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IV.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(IV);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AesKey other) {
      if (other == null) {
        return;
      }
      if (other.IV.Length != 0) {
        IV = other.IV;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IV = input.ReadBytes();
            break;
          }
          case 18: {
            Key = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
